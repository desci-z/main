name: 🚀 AGI Multiplatform Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Versão manual (ex: v0.91)"
        required: false

permissions:
  contents: write

env:
  NODE_VERSION: 20
  RELEASE_DIR: release

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    name: Build ${{ matrix.os }}
    steps:
      - name: 🧩 Checkout
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: 📦 Install dependencies
        run: yarn install --frozen-lockfile

      - name: 🏗️ Build AGI for ${{ matrix.os }}
        run: |
          mkdir -p $RELEASE_DIR
          yarn build

      - name: 📁 Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: agi-${{ matrix.os }}
          path: ${{ env.RELEASE_DIR }}/

  android:
    runs-on: ubuntu-latest
    name: Build Android (Bubblewrap)
    steps:
      - uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Install Bubblewrap
        run: npm i -g @bubblewrap/cli

      - name: 📲 Build Android APK/AAB
        run: |
          mkdir -p $RELEASE_DIR
          yarn build:android

      - name: 📁 Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: agi-android
          path: ${{ env.RELEASE_DIR }}/

  release:
    runs-on: ubuntu-latest
    needs: [build, android]
    name: 📤 Publish GitHub Release
    steps:
      - name: 🧩 Checkout
        uses: actions/checkout@v4

      - name: 📥 Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.RELEASE_DIR }}

      - name: 🧾 List release contents
        run: ls -R $RELEASE_DIR

      - name: 🏷️ Determine version
        id: version
        run: |
          echo "tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: "AGI ${{ steps.version.outputs.tag }}"
          body: |
            AGI Release ${{ steps.version.outputs.tag }}

            **Includes:**
            - Windows `.exe`
            - Linux `.AppImage` `.deb` `.rpm`
            - macOS `.app`
            - Android `.apk` `.aab`

            **Auto-generated by**: GitHub Actions 🚀
          files: |
            ${{ env.RELEASE_DIR }}/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
